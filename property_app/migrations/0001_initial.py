# Generated by Django 5.2.5 on 2025-09-28 14:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('subdomain', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Only lowercase letters, numbers, and hyphens are allowed.', regex='^[a-z0-9-]+$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('theme', models.JSONField(blank=True, null=True)),
                ('primary_image', models.ImageField(blank=True, null=True, upload_to='property_images/')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='property_logos/')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pmcb_form_data', models.JSONField(blank=True, null=True)),
                ('center', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('meta_main_copy_options', models.JSONField(blank=True, null=True)),
                ('meta_headline', models.TextField(blank=True, null=True)),
                ('meta_desktop_display_copy', models.TextField(blank=True, null=True)),
                ('meta_website_url', models.URLField(blank=True, max_length=500, null=True)),
                ('meta_call_to_action', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_notes', models.TextField(blank=True, null=True)),
                ('meta_ready', models.TextField(blank=True, null=True)),
                ('google_headlines', models.JSONField(blank=True, null=True)),
                ('google_long_headline', models.TextField(blank=True, null=True)),
                ('google_descriptions', models.JSONField(blank=True, null=True)),
                ('google_website_url', models.URLField(blank=True, max_length=500, null=True)),
                ('google_notes', models.TextField(blank=True, null=True)),
                ('google_ready', models.TextField(blank=True, null=True)),
                ('dms_sync_ready', models.BooleanField(default=False)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('admin_approved', 'Admin Approved'), ('client_approved', 'Client Approved'), ('fully_approved', 'Fully Approved')], default='pending', help_text='Current approval status of the campaign', max_length=20)),
                ('ai_processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Status of AI content generation for this campaign', max_length=20)),
                ('ai_processing_error', models.TextField(blank=True, help_text='Error message if AI processing failed', null=True)),
                ('ai_processed_at', models.DateTimeField(blank=True, help_text='When AI processing was completed', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='property_app.property')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
            },
        ),
        migrations.CreateModel(
            name='CampaignBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creative_charges_deductions', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('total_gross', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('total_net', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('meta_gross', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('meta_net', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('display_gross', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('display_net', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='budget', to='property_app.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='property_app.campaign')),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='property_app.campaigncomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Campaign Comment',
                'verbose_name_plural': 'Campaign Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignCommentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='comment_attachments/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('file_type', models.CharField(blank=True, max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='property_app.campaigncomment')),
            ],
            options={
                'verbose_name': 'Comment Attachment',
                'verbose_name_plural': 'Comment Attachments',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('date_type', models.CharField(choices=[('event', 'Event Date'), ('milestone', 'Milestone'), ('deadline', 'Deadline'), ('promotion', 'Promotion Date')], default='event', max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_all_day', models.BooleanField(default=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaign_dates', to='property_app.campaign')),
            ],
            options={
                'verbose_name': 'Campaign Date',
                'verbose_name_plural': 'Campaign Dates',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='ClientNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('general', 'General'), ('comment', 'Comment'), ('comment_reply', 'Comment Reply'), ('campaign_update', 'Campaign Update'), ('approval', 'Approval')], default='general', max_length=20)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='property_app.campaign')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='property_app.campaigncomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client Notification',
                'verbose_name_plural': 'Client Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CreativeAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='campaign_assets/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('asset_type', models.CharField(blank=True, max_length=255, null=True)),
                ('platform_type', models.CharField(blank=True, max_length=255, null=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creative_assets', to='property_app.campaign')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='property_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='property_app.propertygroup'),
        ),
        migrations.CreateModel(
            name='UserPropertyMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('tenant', 'Tenant'), ('property_admin', 'Property Admin'), ('group_admin', 'Group Admin')], default='tenant', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='property_app.property')),
                ('property_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='property_app.propertygroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'property', 'property_group'), name='unique_user_property_group_membership')],
            },
        ),
    ]
